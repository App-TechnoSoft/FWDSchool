@{
    ViewData["Title"] = "Home Page";
}
<link rel="stylesheet" href="~/css/site.css">
<body class="HomePage">
<div class="text-center">
    <h1 class="display-4">Welcome to FWD Tutorials!</h1>
</div>

<div class="row row-cols-1 row-cols-md-2 g-4 mt-4 mb-4">
  <div class=" col d-flex align-items-stretch">
    <div class="card">
      <img src="/images/gitt.png" height="200" class="card-img-top" alt="...">
      <div class="card-body">
        <h5 class="card-title">Git and Github</h5>
        <p class="card-text">Git is a version control system that tracks changes in files and supports collaboration by allowing users to work independently and merge changes later.
            Github is a cloud-based platform for hosting Git repositories, offering tools like pull requests and project boards for teamwork, and serving as a hub for open-source contributions.
          </p>
      </div>
    </div>
  </div>
  <div class="col d-flex align-items-stretch">
    <div class="card">
      <img src="/Images/frontendDesign.png" class="card-img-top" alt="...">
      <div class="card-body">
        <h5 class="card-title">Front-end</h5>
        <p class="card-text">Frontend refers to the part of a website or application that users see and interact 
          with directly. It includes everything on the screen—like buttons, text, images, and layouts—built using technologies 
          such as HTML (structure), CSS (styling), and JavaScript (interactivity). In short, it’s the user-facing side of development, 
          focused on design and experience.</p>
      </div>
    </div>
  </div>
  <div class="col d-flex align-items-stretch">
    <div class="card">
      <img src="/images/Csharp.jpg" class="card-img-top" alt="C#and.NET">
      <div class="card-body">
        <h5 class="card-title">C# and .Net</h5>
        <p class="card-text">C# is a versatile programming language that enables developers to write clean,efficient and scalable code. Paired with the .NET Framework,it provides a powerful platform for building robust web applications using structured architecture like MVC(Model-View-Controller). This combination allows seamless integration of server-side logic, database management,and API creation for enterprise-level solutions.
        C# and .NET simplify complex backend tasks by providing pre-built libraries and tools, making it easier for beginners to focus on creating functional applications without reinventing the wheel. 
        </p>
      </div>
    </div>
  </div>
  <div class="col d-flex align-items-stretch">
    <div class="card">
      <img src="/images/Asp.net core.png" class="card-img-top" alt="...">
      <div class="card-body">
        <h5 class="card-title">ASP.Net CORE</h5>
        <p class="card-text">ASP.NET CORE:It is a modern, open-source, cross-platform framework for building web applications.
           It's a powerful tool for developers, offering flexibility, performance, and support for building APIs, web apps, and microservices.
           </p>
    </div>
  </div>
</div>
</div>
</body>